class
 refid "_-GI:_-0bI"
 instance QName(PackageNamespace("_-GI"), "_-0bI")
  extends QName(PackageNamespace("_-GI"), "_-1S9")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("_-5P")
  iinit
   refid "_-GI:_-0bI/iinit"
   param QName(PackageNamespace("com.company.assembleegameclient.objects"), "GameObject")
   body
    maxstack 4
    localcount 4
    initscopedepth 7
    maxscopedepth 8
    code
     pushfalse
     pushtrue
     swap
     jump                L10

     negate
     getlocal2
     getlocal2
     kill                2
     declocal_i          2
     popscope
L10:
     setlocal2

     setlocal3

     getlocal0
     pushscope

     getlocal3
     dup
     jump                L23

     convert_b
     nextvalue
     kill                2
     kill                2
     declocal            2
     strictequals
L23:
     iftrue              L27

     pop
     getlocal2
     convert_b
L27:
     iffalse             L45

     getlocal0
     constructsuper      0

     getlocal2
     dup
     iffalse             L36

     pop
     getlocal2
     convert_b
L36:
     iftrue              L45

     getlocal0
     getlocal1
     initproperty        QName(PackageNamespace("", "#0"), "go_")

     getlocal3
     iffalse             L45

     getlocal0
     pushbyte            0
     initproperty        QName(PackageNamespace("", "#0"), "_-0YR")

L45:
     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PackageNamespace("", "#0"), "go_") type QName(PackageNamespace("com.company.assembleegameclient.objects"), "GameObject") end
  trait slot QName(PackageNamespace("", "#0"), "_-0YR") type QName(PackageNamespace("", "#0"), "int") end
  trait method QName(PackageNamespace("", "#0"), "update") flag OVERRIDE
   method
    refid "_-GI:_-0bI/update"
    param QName(PackageNamespace("", "#0"), "int")
    param QName(PackageNamespace("", "#0"), "int")
    returns QName(PackageNamespace("", "#0"), "Boolean")
    body
     maxstack 11
     localcount 10
     initscopedepth 7
     maxscopedepth 8
     code
      pushfalse
      pushtrue
      setlocal            8

      jump                L10

      inclocal_i          3
      declocal            5
      checkfilter
      kill                3
      convert_d
      typeof
L10:
      setlocal            9

      getlocal0
      pushscope

      pushnan
      setlocal            4

      pushbyte            0
      setlocal            5

      pushnan
      setlocal            6

      pushnull
      coerce              QName(PackageNamespace("_-GI"), "_-MX")
      setlocal            7

      getlocal            8
      dup
      iftrue              L28

      pop
      getlocal3
      convert_b
L28:
      iffalse             L52

      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "go_")
      getproperty         QName(PackageNamespace("", "#0"), "map_")
      pushnull
      ifne                L40

      getlocal            9
      iftrue              L57

      pushfalse
      returnvalue

      getlocal            8
      iffalse             L52

L40:
      findproperty        QName(PackageNamespace("", "#0"), "x_")
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "go_")
      getproperty         QName(PackageNamespace("", "#0"), "x_")
      initproperty        QName(PackageNamespace("", "#0"), "x_")

      getlocal            8
      dup
      iftrue              L51

      pop
      getlocal2
      convert_b
L51:
      iffalse             L57

L52:
      findproperty        QName(PackageNamespace("", "#0"), "y_")
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "go_")
      getproperty         QName(PackageNamespace("", "#0"), "y_")
      initproperty        QName(PackageNamespace("", "#0"), "y_")

L57:
      getlocal1
      getlocal            9
      iftrue              L64

      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "_-0YR")
      subtract
      convert_i
L64:
      setlocal3

      getlocal            8
      iffalse             L157

      getlocal3
      getlocal            9
      dup
      iffalse             L74

      pop
      getlocal1
      convert_b
L74:
      iftrue              L122

      pushshort           500
      ifngt               L226

      getlocal            8
      dup
      iftrue              L83

      pop
      getlocal3
      convert_b
L83:
      iffalse             L135

      pushbyte            2
      getlocal            9
      dup
      iffalse             L91

      pop
      getlocal0
      convert_b
L91:
      iftrue              L132

      getlex              QName(PackageNamespace("", "#0"), "Math")
      getproperty         QName(PackageNamespace("", "#0"), "PI")
      multiply
      getlex              QName(PackageNamespace("", "#0"), "Math")
      callproperty        QName(PackageNamespace("", "#0"), "random"), 0
      multiply
      convert_d
      setlocal            4

      getlocal            8
      dup
      iftrue              L113

      jump                L110

      bitor
      declocal_i          7
      nextname
      checkfilter
      convert_o
      inclocal            5
L110:
      pop
      getlocal0
      convert_b
L113:
      iffalse             L135

      pushbyte            3
      getlocal            8
      dup
      iftrue              L121

      pop
      getlocal0
      convert_b
L121:
      iffalse             L132

L122:
      findpropstrict      QName(PackageNamespace("", "#0"), "int")
      getlex              QName(PackageNamespace("", "#0"), "Math")
      callproperty        QName(PackageNamespace("", "#0"), "random"), 0
      pushbyte            5
      multiply
      callproperty        QName(PackageNamespace("", "#0"), "int"), 1
      add
      pushbyte            20
      multiply
      convert_i
L132:
      setlocal            5

      getlocal            9
      iftrue              L157

L135:
      pushdouble          0.3
      pushdouble          0.4
      getlocal            9
      dup
      iffalse             L143

      pop
      getlocal1
      convert_b
L143:
      iftrue              L147

      getlex              QName(PackageNamespace("", "#0"), "Math")
      callproperty        QName(PackageNamespace("", "#0"), "random"), 0
      multiply
L147:
      add
      getlocal            9
      dup
      iffalse             L154

      pop
      getlocal1
      convert_b
L154:
      iftrue              L156

      convert_d
L156:
      setlocal            6

L157:
      findpropstrict      QName(PackageNamespace("_-GI"), "_-MX")
      pushint             16777215
      getlex              QName(PackageNamespace("", "#0"), "Math")
      callproperty        QName(PackageNamespace("", "#0"), "random"), 0
      pushdouble          0.3
      multiply
      getlocal            5
      pushshort           1000
      pushdouble          0.1
      getlocal            9
      dup
      iffalse             L172

      pop
      getlocal1
      convert_b
L172:
      iftrue              L178

      getlex              QName(PackageNamespace("", "#0"), "Math")
      callproperty        QName(PackageNamespace("", "#0"), "random"), 0
      pushdouble          0.1
      multiply
      add
L178:
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "go_")
      getlocal            4
      getlocal            6
      constructprop       QName(PackageNamespace("_-GI"), "_-MX"), 8
      coerce              QName(PackageNamespace("_-GI"), "_-MX")
      setlocal            7

      getlocal            8
      dup
      iftrue              L191

      pop
      getlocal1
      convert_b
L191:
      iffalse             L226

      getlex              QName(PackageNamespace("", "#0"), "map_")
      getlocal            7
      getlex              QName(PackageNamespace("", "#0"), "x_")
      getlocal            6
      getlex              QName(PackageNamespace("", "#0"), "Math")
      jump                L204

      declocal            8
      setlocal            7

      add_i
      inclocal            7
      convert_s
      instanceof
L204:
      getlocal            4
      callproperty        QName(PackageNamespace("", "#0"), "cos"), 1
      multiply
      add
      getlex              QName(PackageNamespace("", "#0"), "y_")
      getlocal            6
      getlex              QName(PackageNamespace("", "#0"), "Math")
      getlocal            4
      callproperty        QName(PackageNamespace("", "#0"), "sin"), 1
      multiply
      add
      callpropvoid        QName(PackageNamespace("", "#0"), "addObj"), 3

      getlocal            9
      dup
      iffalse             L222

      pop
      getlocal1
      convert_b
L222:
      iftrue              L226

      getlocal0
      getlocal1
      initproperty        QName(PackageNamespace("", "#0"), "_-0YR")

L226:
      pushtrue
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "_-GI:_-0bI/cinit"
  body
   maxstack 3
   localcount 1
   initscopedepth 6
   maxscopedepth 7
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
