class
 refid "_-GI:_-AD"
 instance QName(PackageNamespace("_-GI"), "_-AD")
  extends QName(PackageNamespace("_-GI"), "_-1S9")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("_-Bf")
  iinit
   refid "_-GI:_-AD/iinit"
   param QName(PackageNamespace("com.company.assembleegameclient.objects"), "GameObject")
   param QName(PackageNamespace("_-GI"), "_-0oF")
   body
    maxstack 4
    localcount 5
    initscopedepth 7
    maxscopedepth 8
    code
     pushfalse
     pushtrue
     swap
     jump                L10

     inclocal_i          3
     decrement
     declocal            2
     kill                2
     kill                3
     declocal            2
L10:
     setlocal3

     setlocal            4

     getlocal0
     pushscope

     getlocal3
     dup
     iffalse             L20

     pop
     getlocal3
     convert_b
L20:
     iftrue              L74

     getlocal0
     constructsuper      0

     getlocal            4
     dup
     iftrue              L36

     pop
     jump                L34

     declocal_i          2
     declocal            3
     inclocal            3
     kill                2
     increment
     setlocal2

L34:
     getlocal2
     convert_b
L36:
     iffalse             L60

     getlocal0
     getlocal1
     initproperty        QName(PackageNamespace("", "#0"), "go_")

     getlocal3
     iftrue              L74

     getlocal0
     getlocal2
     jump                L51

     getlocal0
     istypelate
     astypelate
     declocal            2
     inclocal            3
     setlocal3

L51:
     getproperty         QName(PackageNamespace("", "#0"), "color")
     initproperty        QName(PackageNamespace("", "#0"), "color_")

     getlocal            4
     dup
     iftrue              L59

     pop
     getlocal2
     convert_b
L59:
     iffalse             L71

L60:
     getlocal0
     getlocal2
     getproperty         QName(PackageNamespace("", "#0"), "rate")
     initproperty        QName(PackageNamespace("", "#0"), "rate")

     getlocal3
     dup
     iffalse             L70

     pop
     getlocal1
     convert_b
L70:
     iftrue              L74

L71:
     getlocal0
     getlocal2
     initproperty        QName(PackageNamespace("", "#0"), "props")

L74:
     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PackageNamespace("", "#0"), "go_") type QName(PackageNamespace("com.company.assembleegameclient.objects"), "GameObject") end
  trait slot QName(PackageNamespace("", "#0"), "props") type QName(PackageNamespace("_-GI"), "_-0oF") end
  trait slot QName(PackageNamespace("", "#0"), "color_") type QName(PackageNamespace("", "#0"), "int") end
  trait slot QName(PackageNamespace("", "#0"), "rate") type QName(PackageNamespace("", "#0"), "Number") end
  trait slot QName(PackageNamespace("", "#0"), "type") type QName(PackageNamespace("", "#0"), "String") end
  trait method QName(PackageNamespace("", "#0"), "update") flag OVERRIDE
   method
    refid "_-GI:_-AD/update"
    param QName(PackageNamespace("", "#0"), "int")
    param QName(PackageNamespace("", "#0"), "int")
    returns QName(PackageNamespace("", "#0"), "Boolean")
    body
     maxstack 10
     localcount 13
     initscopedepth 7
     maxscopedepth 8
     code
      pushfalse
      pushtrue
      setlocal            11

      jump                L10

      popscope
      declocal_i          3
      getlocal2
      convert_u
      declocal            4
      decrement_i
L10:
      setlocal            12

      getlocal0
      pushscope

      pushnan
      setlocal            5

      pushnan
      setlocal            6

      pushnan
      setlocal            7

      pushnan
      setlocal            8

      pushnan
      setlocal            9

      pushnull
      coerce              QName(PackageNamespace("_-GI"), "_-bA")
      setlocal            10

      getlocal            11
      dup
      iftrue              L32

      pop
      getlocal1
      convert_b
L32:
      iffalse             L45

      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "go_")
      getproperty         QName(PackageNamespace("", "#0"), "map_")
      pushnull
      ifne                L54

      getlocal            11
      dup
      iftrue              L44

      pop
      getlocal3
      convert_b
L44:
      iffalse             L66

L45:
      pushfalse
      returnvalue

      getlocal            12
      dup
      iffalse             L53

      pop
      getlocal3
      convert_b
L53:
      iftrue              L71

L54:
      findproperty        QName(PackageNamespace("", "#0"), "x_")
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "go_")
      getproperty         QName(PackageNamespace("", "#0"), "x_")
      initproperty        QName(PackageNamespace("", "#0"), "x_")

      getlocal            11
      dup
      iftrue              L65

      pop
      getlocal3
      convert_b
L65:
      iffalse             L71

L66:
      findproperty        QName(PackageNamespace("", "#0"), "y_")
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "go_")
      getproperty         QName(PackageNamespace("", "#0"), "y_")
      initproperty        QName(PackageNamespace("", "#0"), "y_")

L71:
      pushbyte            20
      setlocal3

      pushbyte            0
      setlocal            4

      jump                L278

L76:
      label
      getlex              QName(PackageNamespace("", "#0"), "Math")
      callproperty        QName(PackageNamespace("", "#0"), "random"), 0
      pushdouble          0.3
      add
      pushshort           200
      multiply
      convert_d
      setlocal            5

      getlocal            12
      dup
      iffalse             L91

      pop
      getlocal3
      convert_b
L91:
      iftrue              L282

      getlex              QName(PackageNamespace("", "#0"), "Math")
      callproperty        QName(PackageNamespace("", "#0"), "random"), 0
      convert_d
      setlocal            6

      getlocal            11
      iffalse             L154

      getlex              QName(PackageNamespace("com.company.assembleegameclient.util"), "_-1Os")
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "props")
      getproperty         QName(PackageNamespace("", "#0"), "speed")
      getlocal            11
      dup
      iftrue              L108

      pop
      getlocal3
      convert_b
L108:
      iffalse             L142

      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "props")
      getproperty         QName(PackageNamespace("", "#0"), "speed")
      getlocal            12
      dup
      iffalse             L118

      pop
      getlocal1
      convert_b
L118:
      iftrue              L141

      getlocal            6
      getlocal            11
      dup
      iftrue              L126

      pop
      getlocal0
      convert_b
L126:
      iffalse             L140

      pushbyte            1
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "props")
      getproperty         QName(PackageNamespace("", "#0"), "speedVariance")
      jump                L138

      kill                3
      dup
      kill                3
      setlocal3

      inclocal            9
      pop
L138:
      subtract
      multiply
L140:
      multiply
L141:
      subtract
L142:
      callproperty        QName(PackageNamespace("", "#0"), "_-1Bg"), 1
      convert_d
      getlocal            11
      iffalse             L229

      setlocal            7

      getlocal            11
      dup
      iftrue              L153

      pop
      getlocal3
      convert_b
L153:
      iffalse             L193

L154:
      getlex              QName(PackageNamespace("com.company.assembleegameclient.util"), "_-1Os")
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "props")
      getproperty         QName(PackageNamespace("", "#0"), "speed")
      getlocal            11
      iffalse             L181

      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "props")
      getproperty         QName(PackageNamespace("", "#0"), "speed")
      getlocal            11
      iffalse             L180

      getlocal            6
      getlocal            12
      dup
      iffalse             L172

      pop
      getlocal1
      convert_b
L172:
      iftrue              L179

      pushbyte            1
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "props")
      getproperty         QName(PackageNamespace("", "#0"), "speedVariance")
      subtract
      multiply
L179:
      multiply
L180:
      subtract
L181:
      callproperty        QName(PackageNamespace("", "#0"), "_-1Bg"), 1
      convert_d
      getlocal            11
      dup
      iftrue              L189

      pop
      getlocal3
      convert_b
L189:
      iffalse             L205

      setlocal            8

      getlocal            11
      iffalse             L282

L193:
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "props")
      getproperty         QName(PackageNamespace("", "#0"), "life")
      pushshort           1000
      multiply
      getlocal            11
      dup
      iftrue              L204

      pop
      getlocal3
      convert_b
L204:
      iffalse             L228

L205:
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "props")
      getproperty         QName(PackageNamespace("", "#0"), "life")
      getlocal            12
      iftrue              L214

      pushshort           1000
      multiply
      getlocal            12
      iftrue              L227

L214:
      getlocal            6
      getlocal            12
      dup
      iffalse             L221

      pop
      getlocal2
      convert_b
L221:
      iftrue              L226

      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "props")
      getproperty         QName(PackageNamespace("", "#0"), "lifeVariance")
      multiply
L226:
      multiply
L227:
      subtract
L228:
      convert_d
L229:
      setlocal            9

      getlocal            11
      dup
      iftrue              L236

      pop
      getlocal0
      convert_b
L236:
      iffalse             L282

      findpropstrict      QName(PackageNamespace("_-GI"), "_-bA")
      getlocal            5
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "color_")
      getlocal            9
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "props")
      getproperty         QName(PackageNamespace("", "#0"), "spread")
      pushdouble          0.75
      getlocal            7
      getlocal            8
      constructprop       QName(PackageNamespace("_-GI"), "_-bA"), 7
      coerce              QName(PackageNamespace("_-GI"), "_-bA")
      setlocal            10

      getlocal            11
      dup
      jump                L260

      setlocal3

      declocal_i          10
      declocal_i          9
      setlocal            11

      setlocal2

      declocal            2
L260:
      iftrue              L264

      pop
      getlocal0
      convert_b
L264:
      iffalse             L278

      getlex              QName(PackageNamespace("", "#0"), "map_")
      getlocal            10
      getlex              QName(PackageNamespace("", "#0"), "x_")
      getlex              QName(PackageNamespace("", "#0"), "y_")
      callpropvoid        QName(PackageNamespace("", "#0"), "addObj"), 3

      getlocal            12
      dup
      iffalse             L276

      pop
      getlocal3
      convert_b
L276:
      iftrue              L278

      inclocal_i          4
L278:
      getlocal            4
      getlocal0
      getproperty         QName(PackageNamespace("", "#0"), "rate")
      iflt                L76

L282:
      pushtrue
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "_-GI:_-AD/cinit"
  body
   maxstack 3
   localcount 1
   initscopedepth 6
   maxscopedepth 7
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
